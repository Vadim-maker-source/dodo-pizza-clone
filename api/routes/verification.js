// api/routes/verification.js
import express from 'express';
import nodemailer from 'nodemailer';

const router = express.Router();

router.post('/send-verification', async (req, res) => {
  const { email, code } = req.body;

  if (!email || !code) {
    return res.status(400).json({ error: 'Email –∏ –∫–æ–¥ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  try {
    const transporter = nodemailer.createTransport({
      service: 'gmail',
      auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS,
      },
    });

    const mailOptions = {
      from: `–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ <${process.env.GMAIL_USER}>`,
      to: email,
      subject: '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
      text: `–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: ${code}`,
    };

    await transporter.sendMail(mailOptions);

    res.status(200).json({ message: '–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' });
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∏—Å—å–º–∞:', err);
    res.status(500).json({ error: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ' });
  }
});

export default router; // üîß –í–ê–ñ–ù–û: –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ